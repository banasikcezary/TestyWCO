<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="13" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="LBPROV USER SERVER" duration-ms="248964" started-at="2020-06-10T12:02:14 CEST" finished-at="2020-06-10T12:06:23 CEST">
    <groups>
    </groups>
    <test name="BuyAnAdditionalPackageFromTheStore" duration-ms="23839" started-at="2020-06-10T12:02:14 CEST" finished-at="2020-06-10T12:02:38 CEST">
      <class name="Tests.BuyAnAdditionalPackageFromTheStore">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.BuyAnAdditionalPackageFromTheStore@4a9f80d3]" name="beforeTest" is-config="true" duration-ms="14978" started-at="2020-06-10T12:02:14 CEST" finished-at="2020-06-10T12:02:29 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryBuyAnAdditionalPackageFromTheStore()[pri:0, instance:Tests.BuyAnAdditionalPackageFromTheStore@4a9f80d3]" name="asUserTryBuyAnAdditionalPackageFromTheStore" duration-ms="7898" started-at="2020-06-10T12:02:30 CEST" finished-at="2020-06-10T12:02:38 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryBuyAnAdditionalPackageFromTheStore -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.BuyAnAdditionalPackageFromTheStore@4a9f80d3]" name="afterTest" is-config="true" duration-ms="325" started-at="2020-06-10T12:02:38 CEST" finished-at="2020-06-10T12:02:38 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.BuyAnAdditionalPackageFromTheStore -->
    </test> <!-- BuyAnAdditionalPackageFromTheStore -->
    <test name="BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed" duration-ms="18879" started-at="2020-06-10T12:02:38 CEST" finished-at="2020-06-10T12:02:57 CEST">
      <class name="Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed@66629f63]" name="beforeTest" is-config="true" duration-ms="11191" started-at="2020-06-10T12:02:38 CEST" finished-at="2020-06-10T12:02:49 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryBuyFunctionalitiesWithExceedingTheAmountToBeUsedFromTheStore()[pri:0, instance:Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed@66629f63]" name="asUserTryBuyFunctionalitiesWithExceedingTheAmountToBeUsedFromTheStore" duration-ms="7338" started-at="2020-06-10T12:02:49 CEST" finished-at="2020-06-10T12:02:57 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryBuyFunctionalitiesWithExceedingTheAmountToBeUsedFromTheStore -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed@66629f63]" name="afterTest" is-config="true" duration-ms="337" started-at="2020-06-10T12:02:57 CEST" finished-at="2020-06-10T12:02:57 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed -->
    </test> <!-- BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed -->
    <test name="BuyingNewFunctionalitiesFromTheStore" duration-ms="19107" started-at="2020-06-10T12:02:57 CEST" finished-at="2020-06-10T12:03:16 CEST">
      <class name="Tests.BuyingNewFunctionalitiesFromTheStore">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.BuyingNewFunctionalitiesFromTheStore@1568159]" name="beforeTest" is-config="true" duration-ms="12420" started-at="2020-06-10T12:02:57 CEST" finished-at="2020-06-10T12:03:10 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryBuyNewFunctionalitiesFromTheStore()[pri:0, instance:Tests.BuyingNewFunctionalitiesFromTheStore@1568159]" name="asUserTryBuyNewFunctionalitiesFromTheStore" duration-ms="6380" started-at="2020-06-10T12:03:10 CEST" finished-at="2020-06-10T12:03:16 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryBuyNewFunctionalitiesFromTheStore -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.BuyingNewFunctionalitiesFromTheStore@1568159]" name="afterTest" is-config="true" duration-ms="295" started-at="2020-06-10T12:03:16 CEST" finished-at="2020-06-10T12:03:16 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.BuyingNewFunctionalitiesFromTheStore -->
    </test> <!-- BuyingNewFunctionalitiesFromTheStore -->
    <test name="CsvExport" duration-ms="21852" started-at="2020-06-10T12:03:17 CEST" finished-at="2020-06-10T12:03:38 CEST">
      <class name="Tests.CsvExport">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.CsvExport@6e521c1e]" name="beforeTest" is-config="true" duration-ms="15796" started-at="2020-06-10T12:03:17 CEST" finished-at="2020-06-10T12:03:32 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryExportCsvFile()[pri:0, instance:Tests.CsvExport@6e521c1e]" name="asUserTryExportCsvFile" duration-ms="5779" started-at="2020-06-10T12:03:32 CEST" finished-at="2020-06-10T12:03:38 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryExportCsvFile -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.CsvExport@6e521c1e]" name="afterTest" is-config="true" duration-ms="261" started-at="2020-06-10T12:03:38 CEST" finished-at="2020-06-10T12:03:38 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.CsvExport -->
    </test> <!-- CsvExport -->
    <test name="EditConnectionsSettingsTest" duration-ms="19231" started-at="2020-06-10T12:03:38 CEST" finished-at="2020-06-10T12:03:58 CEST">
      <class name="Tests.EditConnectionsSettingsTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.EditConnectionsSettingsTest@5c48c0c0]" name="beforeTest" is-config="true" duration-ms="11690" started-at="2020-06-10T12:03:38 CEST" finished-at="2020-06-10T12:03:50 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryEditUserSettings()[pri:0, instance:Tests.EditConnectionsSettingsTest@5c48c0c0]" name="asUserTryEditUserSettings" duration-ms="7177" started-at="2020-06-10T12:03:50 CEST" finished-at="2020-06-10T12:03:57 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryEditUserSettings -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.EditConnectionsSettingsTest@5c48c0c0]" name="afterTest" is-config="true" duration-ms="355" started-at="2020-06-10T12:03:57 CEST" finished-at="2020-06-10T12:03:58 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.EditConnectionsSettingsTest -->
    </test> <!-- EditConnectionsSettingsTest -->
    <test name="GenerateCyclicalReport" duration-ms="19755" started-at="2020-06-10T12:03:58 CEST" finished-at="2020-06-10T12:04:18 CEST">
      <class name="Tests.GenerateCyclicalReport">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.GenerateCyclicalReport@439a8f59]" name="beforeTest" is-config="true" duration-ms="11847" started-at="2020-06-10T12:03:58 CEST" finished-at="2020-06-10T12:04:10 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryGenerateCyclicalReport()[pri:0, instance:Tests.GenerateCyclicalReport@439a8f59]" name="asUserTryGenerateCyclicalReport" duration-ms="7547" started-at="2020-06-10T12:04:10 CEST" finished-at="2020-06-10T12:04:17 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryGenerateCyclicalReport -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.GenerateCyclicalReport@439a8f59]" name="afterTest" is-config="true" duration-ms="351" started-at="2020-06-10T12:04:17 CEST" finished-at="2020-06-10T12:04:18 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.GenerateCyclicalReport -->
    </test> <!-- GenerateCyclicalReport -->
    <test name="GenerateSingleReport" duration-ms="22899" started-at="2020-06-10T12:04:18 CEST" finished-at="2020-06-10T12:04:41 CEST">
      <class name="Tests.GenerateSingleReport">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.GenerateSingleReport@3a4e343]" name="beforeTest" is-config="true" duration-ms="12035" started-at="2020-06-10T12:04:18 CEST" finished-at="2020-06-10T12:04:30 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryGenerateSingleReport()[pri:0, instance:Tests.GenerateSingleReport@3a4e343]" name="asUserTryGenerateSingleReport" duration-ms="6355" started-at="2020-06-10T12:04:30 CEST" finished-at="2020-06-10T12:04:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryGenerateSingleReport -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.GenerateSingleReport@3a4e343]" name="afterTest" is-config="true" duration-ms="4491" started-at="2020-06-10T12:04:36 CEST" finished-at="2020-06-10T12:04:41 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.GenerateSingleReport -->
    </test> <!-- GenerateSingleReport -->
    <test name="ImportCsv" duration-ms="15402" started-at="2020-06-10T12:04:41 CEST" finished-at="2020-06-10T12:04:56 CEST">
      <class name="Tests.ImportCsv">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.ImportCsv@72ccd81a]" name="beforeTest" is-config="true" duration-ms="11410" started-at="2020-06-10T12:04:41 CEST" finished-at="2020-06-10T12:04:52 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryImportCsvFile()[pri:0, instance:Tests.ImportCsv@72ccd81a]" name="asUserTryImportCsvFile" duration-ms="3470" started-at="2020-06-10T12:04:52 CEST" finished-at="2020-06-10T12:04:55 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryImportCsvFile -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.ImportCsv@72ccd81a]" name="afterTest" is-config="true" duration-ms="515" started-at="2020-06-10T12:04:55 CEST" finished-at="2020-06-10T12:04:56 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.ImportCsv -->
    </test> <!-- ImportCsv -->
    <test name="LoginFailedTests" duration-ms="17964" started-at="2020-06-10T12:04:56 CEST" finished-at="2020-06-10T12:05:14 CEST">
      <class name="Tests.LoginFailedTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.LoginFailedTest@2f162cc0]" name="beforeTest" is-config="true" duration-ms="12198" started-at="2020-06-10T12:04:56 CEST" finished-at="2020-06-10T12:05:08 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryLogintoAccountFail()[pri:0, instance:Tests.LoginFailedTest@2f162cc0]" name="asUserTryLogintoAccountFail" duration-ms="5534" started-at="2020-06-10T12:05:08 CEST" finished-at="2020-06-10T12:05:14 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryLogintoAccountFail -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.LoginFailedTest@2f162cc0]" name="afterTest" is-config="true" duration-ms="224" started-at="2020-06-10T12:05:14 CEST" finished-at="2020-06-10T12:05:14 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.LoginFailedTest -->
    </test> <!-- LoginFailedTests -->
    <test name="LoginTest" duration-ms="14089" started-at="2020-06-10T12:05:14 CEST" finished-at="2020-06-10T12:05:28 CEST">
      <class name="Tests.PositiveLoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.PositiveLoginTest@71c5b236]" name="beforeTest" is-config="true" duration-ms="11880" started-at="2020-06-10T12:05:14 CEST" finished-at="2020-06-10T12:05:26 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryPositiveLogintoAccount()[pri:0, instance:Tests.PositiveLoginTest@71c5b236]" name="asUserTryPositiveLogintoAccount" duration-ms="1897" started-at="2020-06-10T12:05:26 CEST" finished-at="2020-06-10T12:05:28 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryPositiveLogintoAccount -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.PositiveLoginTest@71c5b236]" name="afterTest" is-config="true" duration-ms="303" started-at="2020-06-10T12:05:28 CEST" finished-at="2020-06-10T12:05:28 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.PositiveLoginTest -->
    </test> <!-- LoginTest -->
    <test name="RecordingTest" duration-ms="20417" started-at="2020-06-10T12:05:28 CEST" finished-at="2020-06-10T12:05:49 CEST">
      <class name="Tests.RecordingTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.RecordingTest@7859e786]" name="beforeTest" is-config="true" duration-ms="10722" started-at="2020-06-10T12:05:28 CEST" finished-at="2020-06-10T12:05:39 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTryEditTagsInRecords()[pri:0, instance:Tests.RecordingTest@7859e786]" name="asUserTryEditTagsInRecords" duration-ms="9381" started-at="2020-06-10T12:05:39 CEST" finished-at="2020-06-10T12:05:48 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTryEditTagsInRecords -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.RecordingTest@7859e786]" name="afterTest" is-config="true" duration-ms="303" started-at="2020-06-10T12:05:48 CEST" finished-at="2020-06-10T12:05:49 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.RecordingTest -->
    </test> <!-- RecordingTest -->
    <test name="SearchUserOnListTest" duration-ms="18210" started-at="2020-06-10T12:05:49 CEST" finished-at="2020-06-10T12:06:07 CEST">
      <class name="Tests.SearchUserOnListTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.SearchUserOnListTest@4a3e3e8b]" name="beforeTest" is-config="true" duration-ms="11615" started-at="2020-06-10T12:05:49 CEST" finished-at="2020-06-10T12:06:00 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="asUserTrySearchUserOnTheList()[pri:0, instance:Tests.SearchUserOnListTest@4a3e3e8b]" name="asUserTrySearchUserOnTheList" duration-ms="6284" started-at="2020-06-10T12:06:00 CEST" finished-at="2020-06-10T12:06:07 CEST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at PageObject.UserList.checkIfTheUserYouAreLookingForExists(UserList.java:66)
at Tests.SearchUserOnListTest.asUserTrySearchUserOnTheList(SearchUserOnListTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTrySearchUserOnTheList -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.SearchUserOnListTest@4a3e3e8b]" name="afterTest" is-config="true" duration-ms="287" started-at="2020-06-10T12:06:07 CEST" finished-at="2020-06-10T12:06:07 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.SearchUserOnListTest -->
    </test> <!-- SearchUserOnListTest -->
    <test name="SellingFunctionalityFromTheStore" duration-ms="16327" started-at="2020-06-10T12:06:07 CEST" finished-at="2020-06-10T12:06:23 CEST">
      <class name="Tests.SellingFunctionalityFromTheStore">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Tests.SellingFunctionalityFromTheStore@549621f3]" name="beforeTest" is-config="true" duration-ms="10779" started-at="2020-06-10T12:06:07 CEST" finished-at="2020-06-10T12:06:18 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="asUserTrySellFunctionalitiesFromTheStore()[pri:0, instance:Tests.SellingFunctionalityFromTheStore@549621f3]" name="asUserTrySellFunctionalitiesFromTheStore" duration-ms="5206" started-at="2020-06-10T12:06:18 CEST" finished-at="2020-06-10T12:06:23 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asUserTrySellFunctionalitiesFromTheStore -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Tests.SellingFunctionalityFromTheStore@549621f3]" name="afterTest" is-config="true" duration-ms="335" started-at="2020-06-10T12:06:23 CEST" finished-at="2020-06-10T12:06:23 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Tests.SellingFunctionalityFromTheStore -->
    </test> <!-- SellingFunctionalityFromTheStore -->
  </suite> <!-- LBPROV USER SERVER -->
</testng-results>
