<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite guice-stage="DEVELOPMENT" verbose="0" name="Failed suite [LBPROV USER SERVER]">
  <test thread-count="5" verbose="0" name="BuyAnAdditionalPackageFromTheStore(failed)">
    <classes>
      <class name="Tests.BuyAnAdditionalPackageFromTheStore">
        <methods>
          <include name="afterTest"/>
          <include name="asUserTryBuyAnAdditionalPackageFromTheStore"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.BuyAnAdditionalPackageFromTheStore -->
    </classes>
  </test> <!-- BuyAnAdditionalPackageFromTheStore(failed) -->
  <test thread-count="5" verbose="0" name="BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed(failed)">
    <classes>
      <class name="Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed">
        <methods>
          <include name="afterTest"/>
          <include name="asUserTryBuyFunctionalitiesWithExceedingTheAmountToBeUsedFromTheStore"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed -->
    </classes>
  </test> <!-- BuyingFunctionalityInTheStoreAndExceedingTheAmountToBeUsed(failed) -->
  <test thread-count="5" verbose="0" name="BuyingNewFunctionalitiesFromTheStore(failed)">
    <classes>
      <class name="Tests.BuyingNewFunctionalitiesFromTheStore">
        <methods>
          <include name="afterTest"/>
          <include name="asUserTryBuyNewFunctionalitiesFromTheStore"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.BuyingNewFunctionalitiesFromTheStore -->
    </classes>
  </test> <!-- BuyingNewFunctionalitiesFromTheStore(failed) -->
  <test thread-count="5" verbose="0" name="CsvExport(failed)">
    <classes>
      <class name="Tests.CsvExport">
        <methods>
          <include name="asUserTryExportCsvFile"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.CsvExport -->
    </classes>
  </test> <!-- CsvExport(failed) -->
  <test thread-count="5" verbose="0" name="EditConnectionsSettingsTest(failed)">
    <classes>
      <class name="Tests.EditConnectionsSettingsTest">
        <methods>
          <include name="asUserTryEditUserSettings"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.EditConnectionsSettingsTest -->
    </classes>
  </test> <!-- EditConnectionsSettingsTest(failed) -->
  <test thread-count="5" verbose="0" name="GenerateCyclicalReport(failed)">
    <classes>
      <class name="Tests.GenerateCyclicalReport">
        <methods>
          <include name="asUserTryGenerateCyclicalReport"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.GenerateCyclicalReport -->
    </classes>
  </test> <!-- GenerateCyclicalReport(failed) -->
  <test thread-count="5" verbose="0" name="GenerateSingleReport(failed)">
    <classes>
      <class name="Tests.GenerateSingleReport">
        <methods>
          <include name="asUserTryGenerateSingleReport"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.GenerateSingleReport -->
    </classes>
  </test> <!-- GenerateSingleReport(failed) -->
  <test thread-count="5" verbose="0" name="ImportCsv(failed)">
    <classes>
      <class name="Tests.ImportCsv">
        <methods>
          <include name="asUserTryImportCsvFile"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.ImportCsv -->
    </classes>
  </test> <!-- ImportCsv(failed) -->
  <test thread-count="5" verbose="0" name="LoginFailedTests(failed)">
    <classes>
      <class name="Tests.LoginFailedTest">
        <methods>
          <include name="afterTest"/>
          <include name="asUserTryLogintoAccountFail"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.LoginFailedTest -->
    </classes>
  </test> <!-- LoginFailedTests(failed) -->
  <test thread-count="5" verbose="0" name="LoginTest(failed)">
    <classes>
      <class name="Tests.PositiveLoginTest">
        <methods>
          <include name="afterTest"/>
          <include name="asUserTryPositiveLogintoAccount"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.PositiveLoginTest -->
    </classes>
  </test> <!-- LoginTest(failed) -->
  <test thread-count="5" verbose="0" name="RecordingTest(failed)">
    <classes>
      <class name="Tests.RecordingTest">
        <methods>
          <include name="asUserTryEditTagsInRecords"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.RecordingTest -->
    </classes>
  </test> <!-- RecordingTest(failed) -->
  <test thread-count="5" verbose="0" name="SearchUserOnListTest(failed)">
    <classes>
      <class name="Tests.SearchUserOnListTest">
        <methods>
          <include name="asUserTrySearchUserOnTheList"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.SearchUserOnListTest -->
    </classes>
  </test> <!-- SearchUserOnListTest(failed) -->
  <test thread-count="5" verbose="0" name="SellingFunctionalityFromTheStore(failed)">
    <classes>
      <class name="Tests.SellingFunctionalityFromTheStore">
        <methods>
          <include name="asUserTrySellFunctionalitiesFromTheStore"/>
          <include name="afterTest"/>
          <include name="beforeTest"/>
        </methods>
      </class> <!-- Tests.SellingFunctionalityFromTheStore -->
    </classes>
  </test> <!-- SellingFunctionalityFromTheStore(failed) -->
</suite> <!-- Failed suite [LBPROV USER SERVER] -->
